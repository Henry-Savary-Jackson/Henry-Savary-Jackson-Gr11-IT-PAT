unit Match_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, DMUnit_u,
  Vcl.Samples.Spin;

type
  TfrmMatch = class(TForm)
    btnBack: TButton;
    lblTeams: TLabel;
    ComboBox1: TComboBox;
    lblSupervisor: TLabel;
    lblDate: TLabel;
    dtpDate: TDateTimePicker;
    edtLocation: TEdit;
    lblLocation: TLabel;
    btnSave: TButton;
    lblScoreOne: TLabel;
    sedTeamOneScore: TSpinEdit;
    sedTeamTwoScore: TSpinEdit;
    lblScoreTwo: TLabel;
    btnFinalise: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnBackClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure sedTeamOneScoreChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    matchID: string;
    arrAllocID : TArray<string>;
    iUser : integer;

  end;

var
  frmMatch: TfrmMatch;
  sTeamOne, sTeamTwo : string;


implementation
uses
Tournament_u;

{$R *.dfm}

procedure TfrmMatch.btnBackClick(Sender: TObject);
begin
frmMatch.Hide;
frmTournament.Show;
end;

procedure TfrmMatch.btnSaveClick(Sender: TObject);
begin
// Update record in Database
end;

procedure TfrmMatch.FormClose(Sender: TObject; var Action: TCloseAction);
begin
Application.Terminate;
end;

procedure TfrmMatch.FormShow(Sender: TObject);

begin

with DataModule1 do
begin
  MatchTB.Open;
  MatchAllocTB.Open;

  util.goToRecord(MatchAllocTB, 'AllocID', arrAllocID[0]);
  sTeamOne := MatchAllocTB['TeamName'];
  util.goToRecord(MatchAllocTB, 'AllocID', arrAllocID[1]);
  sTeamTwo :=  MatchAllocTB['TeamName'];;
  lblTeams.Caption:=  sTeamOne + ' vs ' + sTeamOne;

  util.goToRecord(MatchTB, 'MatchID', matchID);
  edtLocation.Text := MatchTB['Location'];

end;// open datamodule

end;

procedure TfrmMatch.sedTeamOneScoreChange(Sender: TObject);
begin

end;

//procedure

end.
