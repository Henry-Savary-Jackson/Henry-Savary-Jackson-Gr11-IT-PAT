unit Supervisors_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, DMUnit_u;

type
  TfrmSupervisors = class(TForm)
    btnBack: TButton;
    lstSupervisors: TListBox;
    btnAddSupervisor: TButton;
    btnDelSupervisors: TButton;
    btnFileSupervisors: TButton;
    lblNumSupervisorsLeft: TLabel;
    btnOwnSupervisor: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnBackClick(Sender: TObject);
    procedure btnAddSupervisorClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnFileSupervisorsClick(Sender: TObject);
    procedure saveToDB();
    procedure saveToFile();
    procedure btnDelSupervisorsClick(Sender: TObject);
    procedure lstSupervisorsClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmSupervisors: TfrmSupervisors;
  fSupervisors: TextFile;

const
  fileName = 'Supervisors.txt';

implementation

uses
  Main_u;

{$R *.dfm}

procedure TfrmSupervisors.btnAddSupervisorClick(Sender: TObject);
var
  sSupervisorName: string;
begin
  sSupervisorName := inputBox('Supervisor Name', 'Enter their username:', '');

  // checks wheter supervisor is alreadi listBox
  if not lstSupervisors.Items.IndexOf(sSupervisorName) = -1 then
  begin
    showMessage('Username already exists');
    Exit;
  end;

  // add supervisor username to listbox items
  lstSupervisors.Items.Add(sSupervisorName);

end;

procedure TfrmSupervisors.btnBackClick(Sender: TObject);
begin
  // navigate back to main screen
  frmMain.Show;
  frmSupervisors.Hide;
end;

procedure TfrmSupervisors.btnDelSupervisorsClick(Sender: TObject);
begin
  // implementation sould delete properly.
  lstSupervisors.Items.Delete(lstSupervisors.ItemIndex);
end;

procedure TfrmSupervisors.btnFileSupervisorsClick(Sender: TObject);
var
  fileChooser: TOpenDialog;
  sPath, sLine: string;
  fInput: TextFile;
begin
  fileChooser := TOpenDialog.Create(self);

  fileChooser.Filter := 'Text files|*.txt';

  // TODO: Check
  fileChooser.FilterIndex := 1;

  if fileChooser.Execute then
  begin
    sPath := fileChooser.fileName;
  end
  else
  begin
    showMessage('Please choose a text file');
    Exit;
  end;

  fileChooser.Free;

  AssignFile(fInput, sPath);

  Reset(fInput);

  while not Eof(fInput) do
  begin
    Readln(fInput, sLine);

    if not lstSupervisors.Items.IndexOf(sLine) = -1 then
    begin
      Continue;
    end;

    lstSupervisors.Items.Add(sLine);
  end;

  //saves newly added username to supervisors file.
  saveToFile();

end;

procedure TfrmSupervisors.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  saveToDB();
  saveToFile();
  Application.Terminate;
end;

procedure TfrmSupervisors.FormShow(Sender: TObject);
begin
  DataModule1.SupervisorTB.Open;
  btnDelSupervisors.Enabled := false;
end;

procedure TfrmSupervisors.lstSupervisorsClick(Sender: TObject);
begin
  case lstSupervisors.ItemIndex of
    - 1:
    begin
      btnDelSupervisors.Enabled := false;
      btnOwnSupervisor.Enabled := false;

    end
  else
    begin
      btnDelSupervisors.Enabled := true;
    end;
  end;
end;

procedure TfrmSupervisors.saveToDB();
begin
  with DataModule1 do
  begin
    SupervisorTB.Post;
    SupervisorTB.Refresh;
  end;

end;

procedure TfrmSupervisors.saveToFile();
var
  I: integer;
begin;
  Rewrite(fSupervisors);

  AssignFile(fSupervisors, fileName);

  for I := 1 to lstSupervisors.Items.Count do
  begin
    Writeln(fSupervisors, lstSupervisors.Items[I]);
  end;

  CloseFile(fSupervisors);
end;

end.
