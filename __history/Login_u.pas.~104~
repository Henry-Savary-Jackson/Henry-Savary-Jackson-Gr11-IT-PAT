unit Login_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Data.Win.ADODB, Vcl.Dialogs, Vcl.StdCtrls,
  Vcl.ExtCtrls, DMUnit_u;

type
  TfrmLogin = class(TForm)
    edtUsername: TEdit;
    edtPassword: TEdit;
    btnSignIn: TButton;
    cmbUser: TComboBox;
    btnSignUp: TButton;
    lblUsername: TLabel;
    lblPassword: TLabel;
    Image1: TImage;
    lblAppTitle: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure btnSignInClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnSignUpClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure saveInfo();
    function findInTable(table: TADOTable; field: string; val: Variant)
      : Boolean;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;
  fSupervisors: TextFile;

const
  fileName = 'Supervisors.txt';

implementation

uses
  Main_u;

{$R *.dfm}

procedure TfrmLogin.btnSignInClick(Sender: TObject);
var
  sUsername, sPassword: string;
  iUser: integer;
  bValid: Boolean;
begin
  iUser := cmbUser.ItemIndex;

  sUsername := edtUsername.Text;

  if sUsername = '' then
  begin
    showMessage('Please enter your username.');
    Exit;
  end
  else
  begin
    with DataModule1 do
    begin
      case iUser of

        0:
          begin
            if findInTable(OrganiserTB, 'OrganiserTB', sUsername) = false then
            begin
              showMessage('Username doesn"t exist.');
              Exit;
            end;

          end;

        1:
          begin
            if findInTable(SupervisorTB, 'SupervisorName', sUsername) = false
            then
            begin
              showMessage('Username doesn"t exist.');
              Exit;
            end;

          end;

      end;

    end;
  end;

  sPassword := edtPassword.Text;
  with DataModule1 do
  begin
    case iUser of

      0:
        if not OrganiserTB['OrganiserID'] = sPassword then
        begin
          showMessage('Incorrect Password.')
        end;

      1:
        if not SupervisorTB['SupervisorID'] = sPassword then
        begin
          showMessage('Incorrect Password.');
        end;

    end;

  end;

  //send data over to main screen

  frmLogin.Hide;
  frmMain.Show;
end;

procedure TfrmLogin.btnSignUpClick(Sender: TObject);
begin
  frmLogin.Hide;
  frmMain.Show;
end;

procedure TfrmLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  saveInfo();
  Application.Terminate;
end;

procedure TfrmLogin.FormCreate(Sender: TObject);
begin
  //
  lblAppTitle.Caption := 'CAPE TOWN' + #13 + ' SOCCER TOURNAMENT ' + #13 +
    'PLANNER';
end;

procedure TfrmLogin.FormShow(Sender: TObject);
begin
  with DataModule1 do
  begin
    OrganiserTB.Open;
    SupervisorTB.Open;
  end;

end;

procedure TfrmLogin.saveInfo();
begin
  with DataModule1 do
  begin
    OrganiserTB.Post;
    OrganiserTB.Refresh;

    SupervisorTB.Post;
    SupervisorTB.Refresh;
  end;
end;

function TfrmLogin.findInTable(table: TADOTable; field: string;
  val: Variant): Boolean;
begin
  Result := false;

  with DataModule1 do
  begin
    table.First;

    while not table.Eof do
    begin
      if table[field] = val then
      begin
        Result := true;
        Exit;
      end;
      table.Next;

    end;

  end;

end;

end.
