unit Main_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  DMUnit_u,
  Vcl.StdCtrls;

type
  TfrmMain = class(TForm)
    lblWelcome: TLabel;
    btnSignOut: TButton;
    btnHelp: TButton;
    btnTournament: TButton;
    btnTeams: TButton;
    btnSupervisors: TButton;
    procedure FormShow(Sender: TObject);
    procedure btnSupervisorsClick(Sender: TObject);
    procedure btnTeamsClick(Sender: TObject);
    procedure btnTournamentClick(Sender: TObject);
    procedure btnSignOutClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnHelpClick(Sender: TObject);
    procedure NotifySupervisor();
  private
    { Private declarations }
  public
    { Public declarations }
    sID, sUsername: string;
    iUser, iNumRounds: integer;
    bBegin: boolean;

    // 0 = organiser
    // 1 = supervisor
  end;

var
  frmMain: TfrmMain;
  fTournament: TextFile;

const
  fileName = 'Tournament.txt';

implementation

uses
  Login_u,
  Supervisors_u,
  Teams_u,
  Tournament_u,
  Help_u;

{$R *.dfm}

procedure TfrmMain.btnHelpClick(Sender: TObject);
begin
  frmHelp.Show;
  frmMain.Hide;
end;

procedure TfrmMain.btnSignOutClick(Sender: TObject);
begin
  frmLogin.Show;
  frmMain.Hide;
end;

procedure TfrmMain.btnSupervisorsClick(Sender: TObject);
begin
  frmSupervisors.sID := sID;
  frmSupervisors.Show;
  frmMain.Hide;
end;

procedure TfrmMain.btnTeamsClick(Sender: TObject);
begin
  frmTeams.sID := sID;
  frmTeams.Show;
  frmMain.Hide;
end;

procedure TfrmMain.btnTournamentClick(Sender: TObject);
begin
  frmTournament.iUser := iUser;
  frmTournament.sID := sID;
  frmTournament.iRound := iNumRounds;
  frmTournament.bBegin := bBegin;
  frmTournament.Show;
  frmTournament.dDate := StrToDate(InputBox('Date', 'enter date:', ''));
  frmMain.Hide;
end;

procedure TfrmMain.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Application.Terminate;
end;

procedure TfrmMain.NotifySupervisor;
var
  sMatchID, sTeamOne, sTeamTwo: string;
  iScoreOne, iScoreTwo : integer;
begin
  //
  with DataModule1 do
  begin
    if iUser = 1 then
    begin
      MatchTB.Filter := 'MatchDate = ' +
        StrToDate(InputBox('Date', 'enter date:', '')) + ' AND  SupervisorID = '
        + QuotedStr(sID) + '';
      if not(MatchTB.RecordCount = 0) then
      begin
        MatchTB.First;
        sMatchID := MatchTB['MatchID'];
        MatchAllocTB.Filter := 'MatchID = ' + QuotedStr(sMatchID);
        MatchAllocTB.Filtered := true;
        MatchAllocTB.First;
        sTeamOne := MatchAllocTB['TeamName'];
        MatchAllocTB.Next;
        sTeamTwo := MatchAllocTB['TeamName'];
        if MessageDlg('You have to umpire thbe match' + sTeamOne + ' vs ' +
          sTeamTwo + ', do you want to enter results now?', mtConfirmation,
          [mbYes, mbNo], 0, mbYes) = mrYes then
        begin

        end;

      end;
      MatchTB.Filtered := true;
    end;

  end;
end;

procedure TfrmMain.FormShow(Sender: TObject);
var
  sLine: string;
begin
  with DataModule1 do
  begin
    OrganiserTB.Open;
    SupervisorTB.Open;
    MatchTB.Open;
    MatchAllocTB.Open;

  end;

  lblWelcome.Caption := 'Welcome ' + sUsername;

  iNumRounds := 1;
  bBegin := false;
  if not FileExists(fileName) then
  begin

    AssignFile(fTournament, fileName);
    ReWrite(fTournament);
    Writeln(fTournament, 'Begun: F');
    Writeln(fTournament, 'CurrentRound: 1');
    CloseFile(fTournament);
  end
  else
  begin
    AssignFile(fTournament, fileName);

    Reset(fTournament);
    Readln(fTournament, sLine);

    Delete(sLine, 1, pos(' ', sLine));
    case sLine[1] of
      'T':
        bBegin := true;
      'F':
        bBegin := false;
    end;

    Readln(fTournament, sLine);
    Delete(sLine, 1, pos(' ', sLine));

    iNumRounds := strToInt(sLine);
    CloseFile(fTournament);

  end;

  case iUser of

    0:
      begin
        btnTeams.Enabled := not bBegin;
        btnSupervisors.Enabled := true;
      end;
    1:
      begin
        btnTeams.Enabled := false;
        btnSupervisors.Enabled := false;
      end;

  end;

end;

end.
