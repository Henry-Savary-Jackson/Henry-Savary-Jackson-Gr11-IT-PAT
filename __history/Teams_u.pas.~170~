unit Teams_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, DMUnit_u, Utils_u;

type
  TfrmTeams = class(TForm)
    btnBack: TButton;
    lstTeams: TListBox;
    btnAddTeam: TButton;
    btnDelTeam: TButton;
    btnFileTeam: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnBackClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnFileTeamClick(Sender: TObject);
    procedure lstTeamsClick(Sender: TObject);
    procedure btnAddTeamClick(Sender: TObject);
    procedure insertTeamInfo(team: string; club: string);
    procedure btnDelTeamClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    sID: string;
  end;

var
  frmTeams: TfrmTeams;
  fSupersvisorNames: TextFile;

implementation

uses
  Main_u;

{$R *.dfm}

procedure TfrmTeams.btnAddTeamClick(Sender: TObject);
var
  sTeamName, sClubName: string;
begin

  sTeamName := InputBox('Team name', 'Enter team"s name', '');

  sClubName := InputBox('Club name', 'Enter name of this team"s club', '');

  with DataModule1 do
  begin

    insertTeamInfo(sTeamName, sClubName);

    TeamTB.Post;
    TeamTB.Refresh;
  end

end;

procedure TfrmTeams.btnBackClick(Sender: TObject);
begin
  frmTeams.Hide;
  frmMain.Show;
end;

procedure TfrmTeams.btnDelTeamClick(Sender: TObject);
var
  sName, sLine: string;
begin

  sLine :=  lstTeams.Items[lstTeams.ItemIndex];
  sName :=  copy(sLine, 1, pos(' from ', Sline)-1);

  lstTeams.Items.Delete(lstTeams.ItemIndex);

  with DataModule1 do
  begin

    util.goToRecord(TeamTB, 'TeamName', sName);
    TeamTB.Delete;

  end;

  btnDelTeam.Enabled := false;

  //TODO : make sure delete doesn't interfere with match allocations

end;

procedure TfrmTeams.btnFileTeamClick(Sender: TObject);
var
  fileChooser: TOpenDialog;
  sPath, sLine, sTeamName, sClubName: string;
  fTeams: TextFile;
  iPos: integer;
begin
  fileChooser := TOpenDialog.Create(self);

  fileChooser.Filter := 'Text files|*.txt';

  fileChooser.FilterIndex := 1;

  if fileChooser.Execute then
  begin
    sPath := fileChooser.FileName;
  end
  else
  begin
    showMessage('Please choose a text file');
    Exit;
  end;

  fileChooser.Free;

  AssignFile(fTeams, sPath);

  Reset(fTeams);

  with DataModule1 do
  begin

    while not Eof(fTeams) do
    begin
      Readln(fTeams, sLine);
      iPos := pos('-', sLine);
      sTeamName := copy(sLine, 1, iPos - 1);
      Delete(sLine, 1, iPos);
      sClubName := sLine;

      insertTeamInfo(sTeamName, sClubName);

    end;

    TeamTB.Post;
    TeamTB.Refresh;

  end;

end;

procedure TfrmTeams.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Application.Terminate;
end;

procedure TfrmTeams.FormShow(Sender: TObject);
begin
  with DataModule1 do
  begin
    TeamTB.Open;

    TeamTB.First;

    lstTeams.Items.Clear;

    while not TeamTB.Eof do
    begin
      lstTeams.Items.Add(TeamTB['TeamName'] + ' from ' + TeamTB['ClubName']);
      TeamTB.Next;
    end;

  end;
  btnDelTeam.Enabled := false;

end;

procedure TfrmTeams.lstTeamsClick(Sender: TObject);
begin
  case lstTeams.ItemIndex of
    - 1:
      begin
        btnDelTeam.Enabled := false;
      end
  else
    begin
      btnDelTeam.Enabled := true;
    end;

  end;
end;

procedure TfrmTeams.insertTeamInfo(team: string; club: string);
begin
  with DataModule1 do
  begin

   TeamTB.Last;
    TeamTB.Insert;

    if team = '' then
    begin
      showMessage('Please enter a name for the team.');
      Exit;
    end
    else if length(team) > 30 then
    begin
      showMessage('Team''s name cannot be more than 30 characters.');
      Exit;
    end
    else if util.isInTable(TeamTB, 'TeamName', team) then
    begin
      showMessage('Team already exists.');
      Exit;
    end;

    if club = '' then
    begin
      showMessage('Please enter a name for the Club.');
      Exit;
    end
    else if length(club) > 30 then
    begin
      showMessage('Club''s name cannot be more than 30 characters.');
      Exit;
    end
    else if util.isInTable(TeamTB, 'ClubName', club) then
    begin
      showMessage('Club already exists.');
      Exit;
    end;

    TeamTB.Last;
    TeamTB.Insert;

    TeamTB['TeamName'] := team;
    // TeamTB.Edit;

    TeamTB['NumWon'] := 0;
    // TeamTB.Edit;

    TeamTB['NumLost'] := 0;
    // TeamTB.Edit;

    TeamTB['TournamentPosition'] := 0;
    // TeamTB.Edit;

    TeamTB['ClubName'] := club;

    lstTeams.Items.Add(team + ' from ' + club);

  end;

end;

end.
